- # convert Array of classes to Tree hash
- def mktree classes
  - result = {} # Hash of parent -> {children}
  - classes.each do |c|
    - inheritance = []
    - while c
      - inheritance.unshift c
      - break unless c.parent
      - c = c.parent

    - tree = result
    - while c = inheritance.shift
      - slot = tree[c.name]
      - STDERR.puts "#{tree.object_id}[#{c.name}] => #{slot.class}"
      - case slot
        - when Hash
          - tree = slot
        - when NilClass
          - tree = tree[c.name] = { "" => c }
        - else
          - raise "tree[#{c.name}] => #{slot} ??"
  - result

#view.block
  .secondary-navigation
    %ul.wat-cf
      %li.first{:class=>(@mode=="list"?"active":"")}= link_to "#{t("web-app-theme.list", :default => "List")}", cim_classes_path(:model=>@model, :mode => :list)
      %li{:class=>(@mode=="tree"?"active":"")}= link_to "#{t("web-app-theme.new", :default => "Tree")}", cim_classes_path(:model=>@model, :mode => :tree)
      %li{:class=>(@mode=="graph"?"active":"")}= link_to "#{t("web-app-theme.new", :default => "Graph")}", cim_classes_path(:model=>@model, :mode => :graph)
  .content
    - case @mode
    - when "list"
      = render :partial => "index_list"
    - when "tree"
      - @tree = mktree @cim_classes
      = render :partial => "index_tree"
    - when "graph"
      - @tree = mktree @cim_classes
      = render :partial => "index_graph"
